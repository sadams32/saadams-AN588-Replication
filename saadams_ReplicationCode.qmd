---
title: "saadams_ReplicationCode"
format: html
editor: visual
---

You should start your replication report with a short description of the study and of the specific data and replication analyses you will be performing, to orient your reader. Outline (briefly) the goal of the original paper, the data set used, and the analyses conducted, then describe which you will replicate. You should also demonstrate how you read your datafile into R, and show a few lines of raw data in your output (e.g., using head()).

I will be looking for you to clearly take your reader through all of the elements of data manipulation, analysis, and, where appropriate, visualization. You should provide as much coding detail, explanation, and output tables as necessary to compare your results to those published.

Annotate your code well, and good luck!

# Introduction
Note discrepancies in reported individuals and actual ones in raw data(even in text it is not right/doesn't add up)

# Study Description

# Introduction to analyses we will reproduce

You should also embed in your .Rmd file, near your own results, any images or figures from the original paper that you replicate so that I can see them together. These should be included as .png files in a folder called “img” within your repo. You can include code like the following to reference files in your “img” folder for inclusion in your document.

# Step 1: Getting Started 

## Setting Up Your Workspace

## Loading Packages

```{r}
library(curl)
library(tidyverse)
library(dplyr)
library(gridExtra)
```

## Loading and Cleaning Data
 In summary, midpoint (R50, associated with brightness) was the average percent reflectance between 300–375 and 450–550 nm; LR50, associated with hue, was calculated as the associated wavelength to R50; and BR50, associated with saturation, was calculated by finding the slope of the line tangent to the point at R50. 

### Males
```{r}
f_male <- curl("https://raw.githubusercontent.com/sadams32/saadams-AN588-Replication/refs/heads/main/Espeset2021_AnEntSoc_1.csv") # male butterfly data (R50, L50, BR50, testes weight (mg), wing length (cm))
d_male <- read.csv(f_male, header = TRUE, sep = ",", stringsAsFactors = FALSE) # read in data

colnames(d_male) <- c("Site", "R50", "L50", "BR50", "Testes_Weight_mg", "Wing_Length_cm")

d_male$Site <- as.factor(d_male$Site) # convert vector to factor

d_male <- na.omit(d_male) # omit "NA" entries

head(d_male) # preview
```

### Females
```{r}
f_female <- curl("https://raw.githubusercontent.com/sadams32/saadams-AN588-Replication/refs/heads/main/Espeset2021_AnEntSoc_2.csv") # female butterfly data (spermatophore counts)
d_female <- read.csv(f_female, header = TRUE, sep = ",", stringsAsFactors = FALSE) # read in data

colnames(d_female) <- c("Site", "Sperm_Count")

d_female$Site <- as.factor(d_female$Site) # convert vector to factor

d_female <- na.omit(d_female) # omit "NA" entries

head(d_female) # preview
```

----ANalyses

# Step 2: Analyses

## Descriptive Statistical test: 
Note: not provided in text but Dr, Schmitt said it was fine because you would assume they did these

I'm going to start with summary statistics by collection site

Mean, sd, n in sample

### Male Summary Statistics - NEED TO ADDD N VALUE COLUMN per group
```{r}
summary_male <- d_male %>% # make tibble for summary statistics of male butterflies
  group_by(Site) %>% # sort results by site (ex. one row is the summary stats of the "Davis site")
    summarize(
      R50_mean = round(mean(R50), 3), # mean of R50, rounded to 3 decimal places (same operation for other means)
      R50_sd = round(sd(R50), 3), # standard deviation (sd) of R50, rounded to 3 decimal places (same operation for other SDs)
      L50_mean = round(mean(L50), 3), 
      L50_sd = round(sd(L50), 3),
      BR50_mean = round(mean(BR50), 3),
      BR50_sd = round(sd(BR50), 3),
      Testes_Weight_mg_mean = round(mean(Testes_Weight_mg), 3),
      Testes_Weight_mg_sd = round(sd(Testes_Weight_mg), 3),
      Wing_Length_cm_mean = round(mean(Wing_Length_cm), 3),
      Wing_Length_cm_sd = round(sd(Wing_Length_cm), 3))
```

### Female Summary Statistics - - NEED TO ADDD N VALUE COLUMN per group
```{r}
summary_female <- d_female %>% # make tibble for summary statistics of female butterflies
  group_by(Site) %>% # sort results by site (ex. one row is the summary stats of the "Davis site")
    summarize(
      Sperm_Count_mean = round(mean(Sperm_Count), 3), # mean of spermatophore count, rounded to 3 decimal places
      Sperm_Count_sd = round(sd(Sperm_Count), 3)) # standard deviation (sd) of spermatophore count, rounded to 3 decimal places
```
      
## Inferential Statistical Test # 1 = ANOVA (table 1) - only males??

make sure to add n= ???
```{r}
R50_model <- lm(Testes_Weight_mg ~ R50 + Wing_Length_cm + Site, data = d_male) #Y ~ X1 + X2 + X3

L50_model <- lm(Testes_Weight_mg ~ L50 + Wing_Length_cm + Site, data = d_male) #Y ~ X1 + X2 + X3

BR50_model <- lm(Testes_Weight_mg ~ BR50 + Wing_Length_cm + Site, data = d_male) #Y ~ X1 + X2 + X3
```


```{r}
R50_anova <- anova(R50_model)

L50_anova <- anova(L50_model)

BR50_anova <- anova(BR50_model)

```


```{r}
R50_anova_t1 <- R50_anova[rownames(R50_anova) != "Residuals",]
L50_anova_t1 <- L50_anova[rownames(L50_anova) != "Residuals",]
BR50_anova_t1 <- BR50_anova[rownames(BR50_anova) != "Residuals",]

#  R50
p_format_R50 <- ifelse(R50_anova_t1$`Pr(>F)` < 0.001, "<0.001", round(R50_anova_t1$`Pr(>F)`, 3))


table1_R50 <- data.frame(
  row.names = c("Color variable", "Wing length", "Site"),
  f_R50 = paste0(round(R50_anova_t1$`F value`, 2), "(", R50_anova_t1$Df, ")"),
  p_R50 = p_format_R50
)
colnames(table1_R50) <- c("F-value(Df)", "P-value")

# L50
p_format_L50 <- ifelse(L50_anova_t1$`Pr(>F)` < 0.001, "<0.001", round(L50_anova$`Pr(>F)`, 3))

table1_L50 <- data.frame(
  row.names = c("Color variable", "Wing length", "Site"),
  f_L50 = paste0(round(L50_anova_t1$`F value`, 2), "(", L50_anova_t1$Df, ")"),
  p_L50 = p_format_L50
)

colnames(table1_L50) <- c("F-value(Df)", "P-value")

# BR50
p_format_BR50 <- ifelse(BR50_anova_t1$`Pr(>F)` < 0.001, "<0.001", round(BR50_anova_t1$`Pr(>F)`, 2))

table1_BR50 <- data.frame(
  row.names = c("Color variable", "Wing length", "Site"),
  F_BR50 = paste0(round(BR50_anova_t1$`F value`, 2), "(", BR50_anova_t1$Df, ")"),
  p_BR50 = p_format_BR50
)

colnames(table1_BR50) <- c("F-value(Df)", "P-value")

```

```{r}
#Fstat calc
f_stat_sum <- function(anova) {
  MS_factors <- anova$`Mean Sq`[1:(nrow(anova)-1)]  # mean Squares for factors
  MS_residuals <- anova$`Mean Sq`[nrow(anova)]  # mean Square for residuals
  
  SS_factors <- MS_factors * anova$Df[1:(nrow(anova)-1)]  # sum of squares (SS) = MS * Df for factors
  SS_residuals <- MS_residuals * anova$Df[nrow(anova)]  # sum of squares (SS) for residuals
  
  SST <- sum(SS_factors) + SS_residuals
  SSB <- sum(SS_factors)
  
  df_between <- sum(anova$Df[1:(length(anova$Df)-1)]) # Sum of dfs of all factors
  df_within <- anova$Df[nrow(anova)] # degrees of freedom within groups
  
  MSB <- sum(SS_factors) / df_between # mean squares between groups
  MSW <- SS_residuals / df_within # mean squares within groups
  
  # Calculate R-squared: SSB / SST
  R_squared <- SSB / SST
  
  F_statistic <- MSB / MSW
  
  p_value_overall <- 1 - pf(F_statistic, df_between, df_within)
  p_format_overall <- ifelse(p_value_overall < 0.001, "<0.001", round(p_value_overall, 3))
  
  result <- list(
    R_squared = round(R_squared, 2),
    F_statistic = round(F_statistic, 2),
    p_value = p_format_overall)
  
  return(result)
}
```

```{r}

```

```{r}

# View tables (dataframes)
table1_R50
f_stat_sum(R50_anova)


table1_L50
f_stat_sum(L50_anova)

table1_BR50
f_stat_sum(BR50_anova)

```


INCLUDE WHAT FSTAT means ->>> interpretations

## Inferential Statistical Test # 2 = Tukeys (figure 3)


